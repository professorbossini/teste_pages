{"version":3,"sources":["Cartao.js","Mensagem.js","Botoes.js","Jogo.js","GraficoLinha.js","index.js"],"names":["Cartao","title","this","props","titulo","style","styles","card","className","inner","children","Component","backgroundColor","defaultProps","Mensagem","texto","Botoes","botoes","label","icon","onClick","fIniciar","fEncerrar","fZerar","Jogo","timerGeral","timerSegundoASegundo","operacoes","simbolo","operacao","a","b","gerarConta","n1","Math","floor","random","state","valorFinal","valorInicial","n2","oQueFazer","length","resultado","gerarAlternativas","aux","n","includes","push","gerarJogo","alternativas","setState","_","shuffle","tempoRestante","iniciarRodada","clearInterval","f","t","intervaloAtualizacao","setInterval","encerrar","Array","fill","undefined","status","conta","valor","map","alternativa","indice","toString","fAtualizarPontuacao","GraficoLinha","colecoes","acertos","dados","cor","erros","contador","atualizarDados","zerar","tension","options","animation","duration","scales","y","ticks","stepSize","type","data","labels","datasets","borderColor","PureComponent","App","alterarStatus","atualizarPontuacao","acertou","zerarPontuacao","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.87219230.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'primereact/card';\nexport default class Cartao extends Component {\n  render() {\n    return (\n      <Card title={this.props.titulo} style={styles.card}>\n        <div className={`${styles.inner} ${this.props.className}`}>{this.props.children}</div>\n      </Card>\n    );\n  }\n}\n\nconst styles = {\n  card: {\n    //função css var pega a cor associada à variável especificada\n    backgroundColor: 'var(--blue-100)',\n  },\n  //borda arredondada, background laranja, largura, padding, margin\n  inner: 'border-round bg-orange-50 md:w-10 w-full p-2 m-auto',\n};\n\nCartao.defaultProps = {\n    titulo: 'Resolva a continha se puder!'\n}\n","import React, { Component } from 'react'\n\nexport default class Mensagem extends Component {\n    render() {\n        return (\n            <div className={`${styles.texto} ${this.props.className}`}>\n                {this.props.texto}\n            </div>\n        )\n    }\n}\nconst styles = {\n    texto:\n    //centraliza nos dois eixos, borda, background vermelho, sombra, altura\n      'flex justify-content-center align-items-center border-round bg-red-100 shadow-2 h-4rem'\n}","import React, { Component } from 'react';\nimport {Button} from 'primereact/button'\n\nexport default class Botoes extends Component {\n  render() {\n    return (\n        // usa a classe que chegou via props e a que ele mesmo define\n        <div className={`${this.props.className} ${styles.botoes}`}>\n            <div className=\"flex justify-content-evenly\">\n                <Button\n                    label='Iniciar jogo'\n                    className='p-button-raised  p-button-outlined'\n                    icon='pi pi-check'\n                    // função que será enviada via props\n                    onClick={this.props.fIniciar}\n                />\n                <Button\n                    label='Encerrar jogo'\n                    className='p-button-raised p-button-outlined p-button-danger'\n                    icon='pi pi-times'\n                    // função que será enviada via props\n                    onClick={this.props.fEncerrar}\n                />\n                <Button\n                   label=\"Zerar pontuação\"\n                    className='p-button-raised p-button-outlined p-button-warning'\n                    icon='pi pi-times'\n                    // função que será enviada via props\n                    onClick={this.props.fZerar}\n                />\n            </div>\n            \n        </div>\n    );\n  }\n}\n\nconst styles = {\n    botoes: 'mt-5'\n}","import React, { Component } from 'react';\nimport { Button } from 'primereact/button'\nimport _ from 'underscore'\nexport default class Jogo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // coleção para armazenar as alternativas\n      alternativas: Array(5).fill(undefined),\n      // tempo de duração da exibição de cada desafio\n      intervaloAtualizacao: 5000,\n      //valor inicial do intervalo dentro do qual os valores serão gerados\n      valorInicial: 1,\n      //valor final do intervalo dentro do qual os valores serão gerados\n      valorFinal: 10,\n      //variável que controla o tempo que resta para o usuário resolver o desafio exibido atualmente.\n      tempoRestante: 5\n    }\n  }\n  \n  timerGeral = null\n  timerSegundoASegundo = null\n  \n  operacoes = [\n    {simbolo: '+', operacao: (a, b) => a + b},\n    {simbolo: '-', operacao: (a, b) => a - b},\n  ]\n\n  gerarConta = () => {\n    let n1 = Math.floor (Math.random() * this.state.valorFinal) + this.state.valorInicial;\n    let n2 = Math.floor (Math.random() * this.state.valorFinal) + this.state.valorInicial;\n    let oQueFazer = Math.floor(Math.random ()* this.operacoes.length)\n    let simbolo = this.operacoes[oQueFazer]['simbolo'] \n    let resultado = this.operacoes[oQueFazer]['operacao'](n1, n2)\n    return {n1, n2, simbolo, resultado}\n  }\n\n  gerarAlternativas = (resultado) => {\n    let aux = [resultado]\n    while (aux.length < 5){\n      let n = Math.floor (Math.random() * this.state.valorFinal) + this.state.valorInicial\n      if (!aux.includes(n))\n        aux.push(n)\n    }\n    return aux\n  }\n\n  gerarJogo = () => {\n    // this.setState({\n    //   tempoRestante: 5\n    // })\n    let {n1, n2, simbolo, resultado} = this.gerarConta()\n    let alternativas = this.gerarAlternativas(resultado)\n    this.setState({\n      n1, n2, simbolo, resultado, alternativas: _.shuffle(alternativas), tempoRestante: 5\n    })\n    \n  }\n  \n\n  iniciarRodada = () => {\n  \n    // encerramos a execução dos dois timers\n    clearInterval(this.timerGeral)\n    clearInterval(this.timerSegundoASegundo)\n    //uma função para registrar o timer das rodadas\n    //ela dispara a geração do jogo imediatamente e agenda as demais\n    //o timer segundo a segundo também é iniciado aqui\n    let fire = (f, t) => {\n      f()\n      this.timerSegundoASegundo = setInterval(() => {\n        this.setState({tempoRestante: this.state.tempoRestante - 1})\n      },1000);\n      return setInterval(f, t)\n    }\n    this.timerGeral = fire(this.gerarJogo, this.state.intervaloAtualizacao)\n    \n    \n  }\n\n  encerrar = () => {\n    clearInterval(this.timerGeral)\n    clearInterval(this.timerSegundoASegundo)\n  }\n\n\n  componentWillUnmount(){   \n    this.encerrar()\n  }\n\n  componentDidMount(){\n    //passado pelo componente principal\n    if (this.props.status === 'on')\n      this.iniciarRodada()\n  }\n\n\n  render() {\n    const conta = (\n      <div>\n        <div className={styles.conta}>\n          <div className={styles.valor}>{this.state.n1}</div>\n          <div className={styles.valor}>{this.state.simbolo}</div>\n          <div className={styles.valor}>{this.state.n2}</div>\n          <div className={styles.valor}>=</div>\n          <div className={styles.valor}>...</div>\n        </div>\n        </div>\n    )\n    const alternativas = (\n        <div className={styles.alternativas}>\n          {this.state.alternativas.map((alternativa, indice) => (\n            <Button \n              key={indice} \n              className={`${styles.valor} ${styles.alternativa}`} label={alternativa?.toString()}\n              onClick={() => {\n                this.iniciarRodada()\n                this.props.fAtualizarPontuacao(this.state.resultado === alternativa)}\n              }\n            />\n          ))}          \n        </div>\n    )\n    const tempoRestante = (\n\n        <div className={styles.tempoRestante}>\n          {this.state.tempoRestante}\n        </div>\n    )\n      \n    return (\n      <div>\n        {conta}\n        {alternativas}\n        {tempoRestante}\n      </div>\n    )\n  }\n}\n\n//fora da classe\nconst styles = {\n  // centraliza, borda, background laranja, sombra, altura\n  conta:\n    'flex justify-content-center align-items-center border-round bg-orange-200 shadow-2 h-4rem',\n    // centraliza, espaçamento uniforme, borda, sombra, altura margin top\n  alternativas:\n    'flex justify-content-evenly align-items-center border-round shadow-2 h-4rem mt-2',\n    // centraliza borda, altura e largura iguais\n  valor:\n    'flex justify-content-center align-items-center border-round border-1 border-400  h-3rem w-3rem',\n    // outline no botão\n  alternativa:\n  'p-button-outlined',\n  // centraliza, altura, tamanho da fonte\n  tempoRestante:\n    'flex justify-content-center align-items-center h-4rem text-3xl'\n};\n","import React, { PureComponent } from 'react';\nimport { Chart } from 'primereact/chart';\nexport default class GraficoLinha extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //suavizar as curvas\n      tension: 0.4,\n      //preencher a área sob o gráfico?\n      fill: false,\n    };\n  }\n\n  colecoes = {\n    acertos: {\n      titulo: 'Acertos',\n      dados: [],\n      cor: '#2196F3',\n    },\n    erros: {\n      titulo: 'Erros',\n      dados: [],\n      cor: '#F44336',\n    },\n  };\n\n  contador = [];\n\n  atualizarDados = () => {\n    this.colecoes = {\n      acertos: {\n        titulo: 'Acertos',\n        dados: this.props.zerar\n          ? []\n          : [...this.colecoes.acertos.dados, this.props.acertos],\n        cor: '#2196F3',\n      },\n      erros: {\n        titulo: 'Erros',\n        dados: this.props.zerar\n          ? []\n          : [...this.colecoes.erros.dados, this.props.erros],\n        cor: '#F44336',\n      },\n      tension: 0.4,\n      fill: false,\n    };\n    this.contador = this.props.zerar ? [] : [...this.contador, this.props.contador];\n  };\n\n  render() {\n    this.atualizarDados();\n    return (\n      <Chart\n        options={{\n          animation: {\n            duration: 0,\n          },\n          scales: {\n            y: {\n              ticks: {\n                stepSize: 1,\n              },\n            },\n          },\n        }}\n        type='line'\n        data={{\n          labels: this.contador,\n          datasets: [\n            {\n              label: this.colecoes.acertos.titulo,\n              data: this.colecoes.acertos.dados,\n              fill: this.state.fill,\n              borderColor: this.colecoes.acertos.cor,\n              tension: this.state.tension,\n            },\n            {\n              label: this.colecoes.erros.titulo,\n              data: this.colecoes.erros.dados,\n              fill: this.state.fill,\n              borderColor: this.colecoes.erros.cor,\n              tension: this.state.tension,\n            },\n          ],\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport Cartao from './Cartao';\nimport Mensagem from './Mensagem';\nimport Botoes from './Botoes';\nimport Jogo from './Jogo';\nimport GraficoLinha from './GraficoLinha';\n\nexport default class App extends Component {\n  state = {\n    // jogo iniciado ou não?\n    status: 'off',\n    //número de acertos\n    acertos: 0,\n    //número de erros\n    erros: 0,\n    //número de tentativas\n    contador: 0\n  }\n  alterarStatus = (status) => {\n    this.setState({ status });\n  };\n  atualizarPontuacao = (acertou) => {\n    this.setState(\n      acertou\n        ? { acertos: this.state.acertos + 1, contador: this.state.contador + 1}\n        : { erros: this.state.erros + 1, contador: this.state.contador + 1}\n    );\n  };\n\n  zerarPontuacao = () => {\n    this.setState({\n      acertos: 0,\n      erros: 0,\n    });\n  };\n    render() {\n    return (\n        //grid conteúdo centralizado horizontalmente\n      <div className='grid justify-content-center'>\n        {/*12 colunas. 6 para telas grandes  */}\n        <div className='col-12 lg:col-6'>\n        {/* altura */}\n          <Cartao className='h-18rem'>\n          {/* garantindo altura para alternar entre mensagem e jogo */}\n            <div className='h-12rem'>\n              {this.state.status === 'on' ? (\n                  <Jogo\n                    status={this.state.status}\n                    fAtualizarPontuacao={this.atualizarPontuacao}\n                  />\n                ) : (\n                  <div className='flex align-items-center h-full justify-content-center'>\n                    <Mensagem texto='Clique para iniciar' className='w-6' />\n                  </div>\n                )}\n            </div>\n            <Botoes \n              fIniciar={() => this.alterarStatus('on')}\n              fEncerrar={() => this.alterarStatus('off')}\n              fZerar={() => this.zerarPontuacao()}\n            />\n            {/* comentar */}\n            {/* {`Acertos: ${this.state.acertos}`}\n            {`Erros: ${this.state.erros}`} */}\n          </Cartao>\n        </div>\n        {/* 12 colunas. 6 para telas grandes */}\n        <div className='col-12 lg:col-6'>\n          <Cartao \n            titulo=\"Sua pontuação\"\n            // altura igual à do outro\n            className='h-18rem'>\n            <GraficoLinha \n                  acertos={this.state.acertos}\n                  erros={this.state.erros}\n                  contador={this.state.contador}\n                  zerar={(!this.state.acertos && !this.state.erros)}\n                  />\n          </Cartao>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}